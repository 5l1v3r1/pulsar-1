
[model]

# Role for the Pulsar instance:
# - client: starts the connection with the server
# - server: waits for a connection from the client

role = "client"


# Activate the matching of templates according to similarity. This way, a
# transition is forced after receiving a message even if no template is exactly
# matched. The received message is matched to the closest template.  This helps
# the model transitioning to a deeper state.

simsearch = True

# Set the type of transition used when selecting the next
# states in the markov model:
#    MODE_MOST_PROBABLE_TRANSITION = 0
#    MODE_LEAST_PROBABLE_TRANSITION = 1
#    MODE_RANDOM_TRANSITION = 2
#    MODE_FUZZING_TRANSITION = 3

transitionmode = 0

# Select matching strategy for templates based on the learnt
# model based on tokens or ngrams: TOKENS, NGRAMS

lexerstyle = TOKENS

# In a state with templates with fields, allow selecting
# templates with no  fields to trigger a transition to a deeper state.

nofieldstemplates = True

[client]

# Socket configuration and address of the server when
# role of Pulsar is set to client

host = "127.0.0.1"
port = 80
timeout = 2
bsize= 8192

[server]

# Socket configuration and address to bind the server when
# role of Pulsar is set to server

host = "127.0.0.1"
port = 80
timeout = 2
bsize= 8192
